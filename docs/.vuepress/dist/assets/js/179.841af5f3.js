(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{643:function(e,o,t){"use strict";t.r(o);var i=t(1),s=Object(i.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"outline"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#outline"}},[e._v("#")]),e._v(" Outline")]),e._v(" "),t("ul",[t("li",[e._v("How to develop IoTDB in IDE\n"),t("ul",[t("li",[e._v("IDEA")]),e._v(" "),t("li",[e._v("Eclipse")]),e._v(" "),t("li",[e._v("Debugging IoTDB")])])])]),e._v(" "),t("h1",{attrs:{id:"how-to-develop-iotdb-in-ide"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-to-develop-iotdb-in-ide"}},[e._v("#")]),e._v(" How to develop IoTDB in IDE")]),e._v(" "),t("p",[e._v("There are many ways to compile the source code of IoTDB,\ne.g., modify and compile with IDEA or Eclipse.")]),e._v(" "),t("p",[e._v("Once all UTs are passed after you modify codes, your modification basically works!")]),e._v(" "),t("h2",{attrs:{id:"idea"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#idea"}},[e._v("#")]),e._v(" IDEA")]),e._v(" "),t("ul",[t("li",[e._v('"File" -> "Open" -> choose the root path of IoTDB source code.')]),e._v(" "),t("li",[e._v("use "),t("code",[e._v("mvn clean compile -Dmaven.test.skip=true")]),e._v("to get target.")]),e._v(" "),t("li",[e._v("mark directory "),t("em",[t("strong",[e._v("server/target/generated-sources/antlr4")])]),e._v(" as source code")]),e._v(" "),t("li",[e._v("mark directory "),t("em",[t("strong",[e._v("service-rpc/target/generated-sources/thrift")])]),e._v(" as source code")])]),e._v(" "),t("h2",{attrs:{id:"eclipse"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#eclipse"}},[e._v("#")]),e._v(" Eclipse")]),e._v(" "),t("p",[e._v("Using Eclipse to develop IoTDB is also simple but requires some plugins of Eclipse.")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("If your Eclipse version is released before 2019, Antlr plugin maybe not work in Eclipse. In this way, you have to run the command in your console first: "),t("code",[e._v("mvn eclipse:eclipse -DskipTests")]),e._v(".\nAfter the command is done, you can import IoTDB as an existing project:")]),e._v(" "),t("ul",[t("li",[e._v('Choose menu "import" -> "General" -> "Existing Projects into Workspace" -> Choose IoTDB\nroot path;')]),e._v(" "),t("li",[e._v("Done.")])])]),e._v(" "),t("li",[t("p",[e._v('If your Eclipse version is fashion enough (e.g., you are using the latest version of Eclipse),\nyou can just choose menu "import" -> "Maven" -> "Existing Maven Projects".')])])]),e._v(" "),t("h2",{attrs:{id:"debugging-iotdb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#debugging-iotdb"}},[e._v("#")]),e._v(" Debugging IoTDB")]),e._v(" "),t("p",[e._v("The main class of IoTDB server is "),t("code",[e._v("org.apache.iotdb.db.service.IoTDB")]),e._v(".\nThe main class of IoTDB cli is "),t("code",[e._v("org.apache.iotdb.client.Client")]),e._v("\n(or "),t("code",[e._v("org.apache.iotdb.client.WinClient")]),e._v(" on Win OS).")]),e._v(" "),t("p",[e._v("You can run/debug IoTDB by using the two classes as the entrance.")]),e._v(" "),t("p",[e._v("Another way to understand IoTDB is to read and try Unit Tests.")])])}],!1,null,null,null);o.default=s.exports}}]);