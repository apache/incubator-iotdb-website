(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{534:function(e,t,a){"use strict";a.r(t);var s=a(1),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/73625255-03fe2680-467f-11ea-91ae-64407ef1125c.png"}}),e._v(" "),e._m(1),e._v(" "),a("p",[e._v("The storage engine is based on the LSM design. The data is first written to the memory buffer memtable and then flushed to disk. For each device, the maximum timestamp being flushed (including those that have been flushed and are being flushed) is maintained in memory. The data is divided into sequential data and out-of-order data according to this timestamp. Different types of data are separated into different memtables and flushed into different TsFiles.")]),e._v(" "),a("p",[e._v("Each data file TsFile corresponds to a file index information TsFileResource in memory for query use.")]),e._v(" "),a("p",[e._v("In addition, the storage engine includes asynchronous persistence and file merge mechanisms.")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),a("p",[e._v("See details:")]),e._v(" "),a("ul",[a("li",[a("router-link",{attrs:{to:"/document/master/SystemDesign/4-StorageEngine/6-DataManipulation.html"}},[e._v("Data write")])],1)]),e._v(" "),e._m(6),e._v(" "),e._m(7),e._v(" "),e._m(8),e._v(" "),a("ul",[a("li",[a("p",[a("router-link",{attrs:{to:"/document/master/SystemDesign/4-StorageEngine/2-WAL.html"}},[e._v("Write Ahead Log (WAL)")])],1)]),e._v(" "),a("li",[a("p",[a("router-link",{attrs:{to:"/document/master/SystemDesign/4-StorageEngine/3-FlushManager.html"}},[e._v("memtable Endurance")])],1)]),e._v(" "),a("li",[a("p",[a("router-link",{attrs:{to:"/document/master/SystemDesign/4-StorageEngine/4-MergeManager.html"}},[e._v("File merge mechanism")])],1)])])])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"storage-engine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#storage-engine"}},[this._v("#")]),this._v(" Storage engine")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"design-ideas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#design-ideas"}},[this._v("#")]),this._v(" Design ideas")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"write-process"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#write-process"}},[this._v("#")]),this._v(" Write process")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"related-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#related-code"}},[this._v("#")]),this._v(" Related code")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("p",[e._v("org.apache.iotdb.db.engine.StorageEngine")]),e._v(" "),a("p",[e._v("Responsible for writing and accessing an IoTDB instance and managing all StorageGroupProsessor.")])]),e._v(" "),a("li",[a("p",[e._v("org.apache.iotdb.db.engine.storagegroup.StorageGroupProcessor")]),e._v(" "),a("p",[e._v("Responsible for writing and accessing data within a time partition of a storage group.")]),e._v(" "),a("p",[e._v("Manages all partitions‘ TsFileProcessor .")])]),e._v(" "),a("li",[a("p",[e._v("org.apache.iotdb.db.engine.storagegroup.TsFileProcessor")]),e._v(" "),a("p",[e._v("Responsible for data writing and accessing a TsFile file.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"data-write"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-write"}},[this._v("#")]),this._v(" Data write")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"data-access"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#data-access"}},[this._v("#")]),this._v(" Data access")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("Main entrance（StorageEngine）: public QueryDataSource query(SingleSeriesExpression seriesExpression, QueryContext context, QueryFileManager filePathsManager)\n​\n"),t("ul",[t("li",[this._v("Find all ordered and out-of-order TsFileResources containing this time series and return them for use by the query engine")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"related-documents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#related-documents"}},[this._v("#")]),this._v(" Related documents")])}],!1,null,null,null);t.default=i.exports}}]);