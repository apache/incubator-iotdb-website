(window.webpackJsonp=window.webpackJsonp||[]).push([[103],{528:function(e,t,r){"use strict";r.r(t);var a=r(1),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("div",{staticClass:"content"},[e._m(0),e._v(" "),r("img",{staticStyle:{width:"100%","max-width":"800px","max-height":"600px","margin-left":"auto","margin-right":"auto",display:"block"},attrs:{src:"https://user-images.githubusercontent.com/19167280/73625242-f648a100-467e-11ea-921c-b954a3ecae7a.png"}}),e._v(" "),e._m(1),e._v(" "),r("p",[e._v("The query engine is responsible for parsing all user commands, generating plans, delivering them to the corresponding executors, and returning result sets.")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),r("ul",[r("li",[r("router-link",{attrs:{to:"/document/master/SystemDesign/2-QueryEngine/2-Planner.html"}},[e._v("Query Plan Generator")])],1),e._v(" "),r("li",[r("router-link",{attrs:{to:"/document/master/SystemDesign/2-QueryEngine/3-PlanExecutor.html"}},[e._v("PlanExecutor")])],1)])])}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"queryengine"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#queryengine"}},[this._v("#")]),this._v(" QueryEngine")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"design-ideas"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#design-ideas"}},[this._v("#")]),this._v(" Design ideas")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"related-classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#related-classes"}},[this._v("#")]),this._v(" Related classes")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[r("p",[e._v("org.apache.iotdb.db.service.TSServiceImpl")]),e._v(" "),r("p",[e._v("IoTDB server-side RPC implementation, which directly interacts with the client.")])]),e._v(" "),r("li",[r("p",[e._v("org.apache.iotdb.db.qp.Planner")]),e._v(" "),r("p",[e._v("Parse SQL, generate logical plans, optimize logical plans, and generate physical plans.")])]),e._v(" "),r("li",[r("p",[e._v("org.apache.iotdb.db.qp.executor.PlanExecutor")]),e._v(" "),r("p",[e._v("Distribute the physical plan to the corresponding actuators, including the following four specific actuators.")]),e._v(" "),r("ul",[r("li",[e._v("MManager: Metadata operations")]),e._v(" "),r("li",[e._v("StorageEngine: Data write")]),e._v(" "),r("li",[e._v("QueryRouter: Data query")]),e._v(" "),r("li",[e._v("LocalFileAuthorizer: Permission operation")])])]),e._v(" "),r("li",[r("p",[e._v("org.apache.iotdb.db.query.dataset.*")]),e._v(" "),r("p",[e._v("The batch result set is returned to the client and contains part of the query logic.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"query-process"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#query-process"}},[this._v("#")]),this._v(" Query process")])},function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ul",[r("li",[e._v("SQL parsing")]),e._v(" "),r("li",[e._v("Generate logical plans")]),e._v(" "),r("li",[e._v("Generate physical plans")]),e._v(" "),r("li",[e._v("Constructing a result set generator")]),e._v(" "),r("li",[e._v("Returning result sets in batches")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"related-documents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#related-documents"}},[this._v("#")]),this._v(" Related documents")])}],!1,null,null,null);t.default=s.exports}}]);