(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{397:function(e,t,s){"use strict";s.r(t);var i=s(1),r=Object(i.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"content"},[e._m(0),e._v(" "),e._m(1),e._v(" "),s("p",[e._v("IoTDB 官网：https://iotdb.apache.org/")]),e._v(" "),s("p",[e._v("代码库：https://github.com/apache/incubator-iotdb/tree/master")]),e._v(" "),s("p",[e._v("快速上手：https://iotdb.apache.org/#/Documents/Quick%20Start")]),e._v(" "),e._m(2),e._v(" "),s("p",[e._v("邮件列表是 Apache 项目进行技术讨论和用户沟通的地方，关注邮件列表就可以收到邮件了。")]),e._v(" "),s("p",[e._v("邮件列表地址：dev@iotdb.apache.org")]),e._v(" "),s("p",[e._v("关注方法：用想接收邮件的邮箱向 dev-subscribe@iotdb.apache.org 发一封邮件，主题内容不限，收到回复后，再次向确认地址发一封确认邮件（确认地址比较长，推荐qq邮箱）。")]),e._v(" "),e._m(3),e._v(" "),s("p",[e._v("所有希望 IoTDB 做的功能或修的 bug，都可以在 Jira 上提 issue：https://issues.apache.org/jira/projects/IOTDB/issues/IOTDB-9?filter=allopenissues")]),e._v(" "),s("p",[e._v("可以选择 issue 类型：bug、improvement、new feature等。新建的 issue 会自动向邮件列表中同步邮件，之后的讨论可在 jira 上留言，也可以在邮件列表进行。当问题解决后请关闭 issue。")]),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),e._m(6),e._v(" "),s("p",[e._v("IoTDB 所有官网上的内容都在项目根目录的 docs 中：")]),e._v(" "),e._m(7),e._v(" "),s("p",[e._v("官网上的版本和分支的对应关系：")]),e._v(" "),e._m(8),e._v(" "),s("p",[e._v("注意事项：")]),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),s("p",[e._v("可以到 jira 上领取现有 issue 或者自己创建 issue 再领取，评论说我要做这个 issue 就可以。")]),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),e._m(13),e._v(" "),e._m(14),e._v(" "),s("FooterFixed")],1)}),[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"一、工作流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、工作流程"}},[this._v("#")]),this._v(" 一、工作流程")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"主要链接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主要链接"}},[this._v("#")]),this._v(" 主要链接")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"订阅邮件列表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#订阅邮件列表"}},[this._v("#")]),this._v(" 订阅邮件列表")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"新功能、bug-反馈、改进等"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新功能、bug-反馈、改进等"}},[this._v("#")]),this._v(" 新功能、Bug 反馈、改进等")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"邮件讨论内容（英文）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#邮件讨论内容（英文）"}},[this._v("#")]),this._v(" 邮件讨论内容（英文）")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("p",[this._v("第一次参与邮件列表可以简单介绍一下自己。（Hi, I'm xxx ...)")])]),this._v(" "),t("li",[t("p",[this._v("开发功能前可以发邮件声明一下自己想做的任务。（Hi，I'm working on issue IOTDB-XXX，My plan is ...）")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"贡献文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#贡献文档"}},[this._v("#")]),this._v(" 贡献文档")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[e._v("docs/Documentation/SystemDesign: 系统设计文档-英文版")]),e._v(" "),s("li",[e._v("docs/Documentation-CHN/SystemDesign: 系统设计文档-中文版")]),e._v(" "),s("li",[e._v("docs/Documentation/UserGuide: 用户手册-英文版")]),e._v(" "),s("li",[e._v("docs/Documentation-CHN/UserGuide: 用户手册-中文版")]),e._v(" "),s("li",[e._v("docs/Community: 社区")]),e._v(" "),s("li",[e._v("docs/Development: 开发指南")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("In progress -> master")]),this._v(" "),t("li",[this._v("major_version.x -> rel/major_version （如 0.9.x -> rel/0.9）")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("Markdown 中的图片可上传至 https://github.com/thulab/iotdb/issues/543 获得 url")]),this._v(" "),t("li",[this._v("新增加的系统设计文档和用户手册的 md 文件，需要在英文版对应的根目录下的 0-Content.md 中增加索引")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"贡献代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#贡献代码"}},[this._v("#")]),this._v(" 贡献代码")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[e._v("克隆仓库到自己的本地的仓库，clone到本地，关联apache仓库为上游 upstream 仓库。")]),e._v(" "),s("li",[e._v("从 master 切出新的分支，分支名根据这个分支的功能决定，一般叫 f_new_feature(如f_storage_engine) 或者 fix_bug(如fix_query_cache_bug)")]),e._v(" "),s("li",[e._v("在 idea 中添加code style为 根目录的 java-google-style.xml")]),e._v(" "),s("li",[e._v("修改代码，增加测试用例（单元测试、集成测试）\n"),s("ul",[s("li",[e._v("集成测试参考: server/src/test/java/org/apache/iotdb/db/integration/IoTDBTimeZoneIT")])])]),e._v(" "),s("li",[e._v("提交 PR, 以 [IOTDB-jira号] 开头")]),e._v(" "),s("li",[e._v("发邮件到 dev 邮件列表：(I've submitted a PR for issue IOTDB-xxx [link])")]),e._v(" "),s("li",[e._v("根据其他人的审阅意见进行修改，继续更新，直到合并")]),e._v(" "),s("li",[e._v("关闭 jira issue")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"二、iotdb-调试方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、iotdb-调试方式"}},[this._v("#")]),this._v(" 二、IoTDB 调试方式")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("p",[e._v("推荐使用 Intellij idea。"),s("code",[e._v("mvn clean package -DskipTests")]),e._v(" 之后把 "),s("code",[e._v("server/target/generated-sources/antlr4")]),e._v(" 和 "),s("code",[e._v("service-rpc/target/generated-sources/thrift")]),e._v(" 标记为 "),s("code",[e._v("Source Root")]),e._v("。")])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ul",[s("li",[s("p",[e._v("服务器主函数："),s("code",[e._v("server/src/main/java/org/apache/iotdb/db/service/IoTDB")]),e._v("，可以debug模式启动")])]),e._v(" "),s("li",[s("p",[e._v("客户端："),s("code",[e._v("client/src/main/java/org/apache/iotdb/client/")]),e._v('，linux 用 Clinet，windows 用 WinClint，可以直接启动，需要参数"-h 127.0.0.1 -p 6667 -u root -pw root"')])]),e._v(" "),s("li",[s("p",[e._v("服务器的 rpc 实现（主要用来客户端和服务器通信，一般在这里开始打断点）："),s("code",[e._v("server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl")])]),e._v(" "),s("ul",[s("li",[e._v("jdbc所有语句：executeStatement(TSExecuteStatementReq req)")]),e._v(" "),s("li",[e._v("jdbc查询语句：executeQueryStatement(TSExecuteStatementReq req)\t* native写入接口：insert(TSInsertReq req)")])])]),e._v(" "),s("li",[s("p",[e._v("存储引擎 org.apache.iotdb.db.engine.StorageEngine")])]),e._v(" "),s("li",[s("p",[e._v("查询引擎 org.apache.iotdb.db.qp.QueryProcessor")])])])}],!1,null,null,null);t.default=r.exports}}]);